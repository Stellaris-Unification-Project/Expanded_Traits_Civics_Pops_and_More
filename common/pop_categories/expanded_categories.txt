resident_gestalt = {
	rank = 0
	clothes_texture_index = 2
	display_category = simple_drone
	
	# This is called whenever a Pop is created, moved to a different planet, or gets a new owner
	assign_to_pop = {
		exists = owner
		owner = {
			is_gestalt = yes
			NOR = {
				has_valid_civic = "civic_machine_servitor"
				has_valid_civic = "civic_machine_assimilator"
				has_valid_civic = "civic_machine_consciousness"
				has_valid_civic = "civic_machine_terminator"
				has_valid_civic = "civic_hive_devouring_swarm"
			}
		}
		OR = {
			AND = {
				owner = { has_authority = auth_hive_mind }
				NOR = {
					has_trait = trait_hive_mind
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
			AND = {
				owner = { has_authority = auth_machine_intelligence }
				NOR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
		is_being_purged = no
		is_being_assimilated = no
		is_enslaved = no
	}
	should_apply_unemployment_penalties = {
		planet = {
			NOT = { has_modifier = gestalt_appeased_protest }
		}
	}
	unemployment_penalties = {
		pop_happiness = -0.20
		planet_crime_no_happiness_mult = 0.25
	}
	unemployment_resources = {
		category = unemployment_resources	
		# Welfare
		produces = {
			trigger = {
				planet = {
					has_modifier = gestalt_appeased_protest
				}	
			}
			unity = 1
		}

		# Unemployment Benefits Crime event
		upkeep = {
			trigger = {
				planet = {
					has_modifier = gestalt_appeased_protest
				}
			}
			energy = 3
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			can_assemble_budding_pop = yes
		}
		planet_pop_assembly_organic_add = @plantoid_budding_rate
	}
	
	# Planet Crime
	triggered_planet_modifier = {
		potential = {
			can_generate_crime = yes
			OR = {
				has_trait = trait_unruly
				has_trait = trait_deviants
			}
		}
		planet_crime_no_happiness_add = 0.1
	}
	triggered_planet_modifier = {
		potential = {
			can_generate_crime = yes
			OR = {
				has_trait = trait_docile
				has_trait = trait_conformists
			}
		}
		planet_crime_no_happiness_add = -0.1
	}
	triggered_planet_modifier = {
		potential = {
			can_generate_crime = yes
			has_trait = trait_obedient
		}
		planet_crime_no_happiness_add = -0.2
	}
	triggered_planet_modifier = {
		potential = {
			can_generate_crime = yes
			exists = owner
			owner = { is_primitive = no }
		}
		planet_crime_no_happiness_add = 0.5
	}

	weight = {
		weight = 10
	}
	
	pop_modifier = {
		pop_political_power = -0.5
		pop_housing_usage_base = 1
		pop_amenities_usage_no_happiness_base = 1
	}
	
	# scope: pop to be resettled
	allow_resettlement = {
		always = yes
	}

	resettlement_cost = {
		energy = 100
		influence = 10
	}
	
	resources = {
		category = pop_category_drones
		
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = no
				has_low_living_standard_type = no
			}
			food = @living_standard_food_normal
			consumer_goods = @living_standard_luxuries_normal
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = no
				has_low_living_standard_type = yes
				planet = { NOT = { has_modifier = gestalt_appeased_protest } }
			}
			food = @living_standard_food_normal
			consumer_goods = @living_standard_luxuries_low
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = no
				has_low_living_standard_type = yes
				planet = { has_modifier = gestalt_appeased_protest }
			}
			food = @living_standard_food_normal
			consumer_goods = 0.2
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = yes
				has_low_living_standard_type = no
			}
			food = @living_standard_phototrophic_normal
			energy = @living_standard_phototrophic_normal
			consumer_goods = @living_standard_luxuries_normal
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = yes
				has_low_living_standard_type = yes
				planet = { NOT = { has_modifier = gestalt_appeased_protest } }
			}
			food = @living_standard_phototrophic_normal
			energy = @living_standard_phototrophic_normal
			consumer_goods = @living_standard_luxuries_low
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = no
				is_phototrophic = yes
				has_low_living_standard_type = yes
				planet = { has_modifier = gestalt_appeased_protest }
			}
			food = @living_standard_phototrophic_normal
			energy = @living_standard_phototrophic_normal
			consumer_goods = 0.2
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = yes
				has_low_living_standard_type = no
			}
			minerals = @living_standard_food_normal
			consumer_goods = @living_standard_luxuries_normal
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = yes
				has_low_living_standard_type = yes
				planet = { NOT = { has_modifier = gestalt_appeased_protest } }
			}
			minerals = @living_standard_food_normal
			consumer_goods = @living_standard_luxuries_low
		}
		upkeep = {
			trigger = { 
				is_organic_species = yes
				is_lithoid = yes
				has_low_living_standard_type = yes
				planet = { has_modifier = gestalt_appeased_protest }
			}
			minerals = @living_standard_food_normal
			consumer_goods = 0.2
		}

		upkeep = {
			trigger = { 
				is_robotic_species = yes
				is_unemployed = no
			}
			energy = @living_standard_energy_normal
		}
		
		produces = {
			trigger = {
				OR = {
					has_trait = trait_lithoid_scintillating
					has_trait = trait_pearlescent
					has_trait = trait_lithoid_byproducts
				}
			}
			rare_crystals = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				OR = {
					has_trait = trait_lithoid_gaseous_byproducts
					has_trait = trait_lithoid_byproducts
				}
			}
			exotic_gases = @lithoid_trait_resource_production
		}

		produces = {
			trigger = {
				OR = {
					has_trait = trait_lithoid_volatile_excretions
					has_trait = trait_lithoid_byproducts
				}
			}
			volatile_motes = @lithoid_trait_resource_production
		}
		
		produces = {
			trigger = {
				is_lithoid = yes
				has_trait = trait_lithoid_armored
			}
			alloys = @lithoid_trait_alloy_production
		}
	}
}